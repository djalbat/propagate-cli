{
  "dependencies": {},
  "devDependencies": {
    "@jecs-imperial/concurrent-layer-protocol": "0.0.114",
    "@jecs-imperial/occam-documents": "0.0.204",
    "@jecs-imperial/occam-editor": "0.0.368",
    "babel": "^6.5.2",
    "babel-cli": "^6.26.0",
    "babel-plugin-transform-react-jsx": "^6.7.5",
    "babel-preset-es2015": "^6.6.0",
    "babel-preset-react": "^6.5.0",
    "browserify": "^13.0.0",
    "chokidar-cli": "^1.2.0",
    "concurrently": "^4.1.0",
    "easy": "^8.2.45",
    "easy-draganddrop": "^8.0.159",
    "easy-layout": "^2.2.7",
    "juxtapose": "^1.0.96",
    "necessary": "^3.2.9",
    "node-sass": "^4.11.0",
    "occam-custom-grammars": "^3.0.46",
    "occam-directed-graphs": "^1.2.0",
    "occam-dom": "^1.2.44",
    "occam-open-cli": "^2.0.73",
    "setimmediate": "^1.0.5",
    "sufficient": "^1.0.20",
    "uglify-js": "^3.3.17"
  },
  "scripts": {
    "clean": "rm -rf ./tmp",
    "copy": "npm run copy-js && npm run copy-css && npm run copy-template",
    "copy-js": "cp ./public/lib/client.js ../occam-desktop/public/lib; cp ./public/lib/client.js ../occam-browser/public/lib",
    "copy-css": "rm -rf ../occam-desktop/public/css; rm -rf ../occam-browser/public/css; cp -r ./public/css ../occam-desktop/public; cp -r ./public/css ../occam-browser/public",
    "copy-template": "rm -rf ../occam-desktop/template; rm -rf ../occam-browser/template; cp -r ./template ../occam-desktop; cp -r ./template ../occam-browser",
    "babel": "babel ./es6 --presets=es2015,react --plugins transform-react-jsx --out-dir=./tmp",
    "babel-debug": "babel ./es6 --presets=es2015,react --plugins transform-react-jsx --source-maps inline --out-dir=./tmp",
    "browserify": "browserify ./tmp/client.js > ./public/lib/client.js",
    "browserify-debug": "browserify ./tmp/client.js --debug > ./public/lib/client.js",
    "uglify": "uglifyjs --comments --mangle --mangle-toplevel --compress --output ./public/lib/client.js -- ./public/lib/client.js",
    "build-js": "npm run babel && npm run browserify && npm run uglify && npm run copy-js",
    "build-js-debug": "npm run babel-debug && npm run browserify-debug && npm run copy-js",
    "watch-js": "npm run build && chokidar './es6/**/*.js' -c 'npm run build'",
    "watch-js-debug": "npm run build-debug && chokidar './es6/**/*.js' -c 'npm run build-debug'",
    "build-sass": "node-sass ./scss/client.scss -o ./public/css && npm run copy-css",
    "build-sass-debug": "node-sass --source-map true ./scss/client.scss -o ./public/css && npm run copy-css",
    "watch-sass": "npm run build-sass && chokidar './scss/**/*.scss' -c 'npm run build-sass'",
    "watch-sass-debug": "npm run build-sass-debug && chokidar './scss/**/*.scss' -c 'npm run build-sass-debug'",
    "build": "npm run clean && npm run build-js && npm run build-sass && npm run clean",
    "build-debug": "npm run clean && npm run build-js-debug && npm run build-sass-debug && npm run clean",
    "watch": "concurrently 'npm run watch-js' 'npm run watch-sass'",
    "watch-debug": "concurrently 'npm run watch-js-debug' 'npm run watch-sass-debug'"
  }
}