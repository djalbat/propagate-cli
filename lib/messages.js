"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: Object.getOwnPropertyDescriptor(all, name).get
    });
}
_export(exports, {
    get AT_LEAST_ONE_CYCLIC_DEPENDENCY_MESSAGE () {
        return AT_LEAST_ONE_CYCLIC_DEPENDENCY_MESSAGE;
    },
    get AT_LEAST_ONE_CYCLIC_DEV_DEPENDENCY_MESSAGE () {
        return AT_LEAST_ONE_CYCLIC_DEV_DEPENDENCY_MESSAGE;
    },
    get COMMAND_NOT_RECOGNISED_MESSAGE () {
        return COMMAND_NOT_RECOGNISED_MESSAGE;
    },
    get CONFIGURATION_FILE_DOES_NOT_EXIST_MESSAGE () {
        return CONFIGURATION_FILE_DOES_NOT_EXIST_MESSAGE;
    },
    get DIRECTORIES_INCLUDES_DIRECTORY_MESSAGE () {
        return DIRECTORIES_INCLUDES_DIRECTORY_MESSAGE;
    },
    get FAILED_ADD_DIRECTORY_MESSAGE () {
        return FAILED_ADD_DIRECTORY_MESSAGE;
    },
    get FAILED_ADD_FORCED_DEPENDENCY_RELATION_MESSAGE () {
        return FAILED_ADD_FORCED_DEPENDENCY_RELATION_MESSAGE;
    },
    get FAILED_ADD_IGNORED_DEPENDENCY_MESSAGE () {
        return FAILED_ADD_IGNORED_DEPENDENCY_MESSAGE;
    },
    get FAILED_BUILD_MESSAGE () {
        return FAILED_BUILD_MESSAGE;
    },
    get FAILED_GIT_MESSAGE () {
        return FAILED_GIT_MESSAGE;
    },
    get FAILED_INITIALISE_MESSAGE () {
        return FAILED_INITIALISE_MESSAGE;
    },
    get FAILED_INSTALL_MESSAGE () {
        return FAILED_INSTALL_MESSAGE;
    },
    get FAILED_PROPAGATE_MESSAGE () {
        return FAILED_PROPAGATE_MESSAGE;
    },
    get FAILED_PUBLISH_MESSAGE () {
        return FAILED_PUBLISH_MESSAGE;
    },
    get FAILED_REMOVE_DIRECTORY_MESSAGE () {
        return FAILED_REMOVE_DIRECTORY_MESSAGE;
    },
    get FAILED_REMOVE_FORCED_DEPENDENCY_RELATION_MESSAGE () {
        return FAILED_REMOVE_FORCED_DEPENDENCY_RELATION_MESSAGE;
    },
    get FAILED_REMOVE_IGNORED_DEPENDENCY_MESSAGE () {
        return FAILED_REMOVE_IGNORED_DEPENDENCY_MESSAGE;
    },
    get FAILED_SAVE_MESSAGE () {
        return FAILED_SAVE_MESSAGE;
    },
    get FAILED_SET_SHELL_COMMANDS_MESSAGE () {
        return FAILED_SET_SHELL_COMMANDS_MESSAGE;
    },
    get FORCED_DEPENDENCY_RELATIONS_INCLUDE_FORCED_DEPENDENCY_RELATION_MESSAGE () {
        return FORCED_DEPENDENCY_RELATIONS_INCLUDE_FORCED_DEPENDENCY_RELATION_MESSAGE;
    },
    get IGNORED_DEPENDENCIES_INCLUDE_IGNORED_DEPENDENCY_MESSAGE () {
        return IGNORED_DEPENDENCIES_INCLUDE_IGNORED_DEPENDENCY_MESSAGE;
    },
    get IGNORED_DEPENDENCIES_INCLUDE_SUB_DIRECTORY_MESSAGE () {
        return IGNORED_DEPENDENCIES_INCLUDE_SUB_DIRECTORY_MESSAGE;
    },
    get INVALID_ANSWER_MESSAGE () {
        return INVALID_ANSWER_MESSAGE;
    },
    get INVALID_DIRECTORY_NUMBER_MESSAGE () {
        return INVALID_DIRECTORY_NUMBER_MESSAGE;
    },
    get INVALID_DIRECTORY_PATH_MESSAGE () {
        return INVALID_DIRECTORY_PATH_MESSAGE;
    },
    get INVALID_FORCED_DEPENDENCY_NAME_MESSAGE () {
        return INVALID_FORCED_DEPENDENCY_NAME_MESSAGE;
    },
    get INVALID_FORCED_DEPENDENCY_RELATION_NUMBER_MESSAGE () {
        return INVALID_FORCED_DEPENDENCY_RELATION_NUMBER_MESSAGE;
    },
    get INVALID_FORCED_DEPENDENT_NAME_MESSAGE () {
        return INVALID_FORCED_DEPENDENT_NAME_MESSAGE;
    },
    get INVALID_IGNORED_DEPENDENCY_NAME_MESSAGE () {
        return INVALID_IGNORED_DEPENDENCY_NAME_MESSAGE;
    },
    get INVALID_IGNORED_DEPENDENCY_NUMBER_MESSAGE () {
        return INVALID_IGNORED_DEPENDENCY_NUMBER_MESSAGE;
    },
    get NO_ARGUMENT_GIVEN_MESSAGE () {
        return NO_ARGUMENT_GIVEN_MESSAGE;
    },
    get NO_FORCED_DEPENDENCY_RELATIONS_MESSAGE () {
        return NO_FORCED_DEPENDENCY_RELATIONS_MESSAGE;
    },
    get NO_IGNORED_DEPENDENCIES_MESSAGE () {
        return NO_IGNORED_DEPENDENCIES_MESSAGE;
    },
    get NO_RELEASE_MESSAGE () {
        return NO_RELEASE_MESSAGE;
    },
    get RELEASE_NOT_PUBLISHABLE_MESSAGE () {
        return RELEASE_NOT_PUBLISHABLE_MESSAGE;
    },
    get SUCCESSFUL_ADD_DIRECTORY_MESSAGE () {
        return SUCCESSFUL_ADD_DIRECTORY_MESSAGE;
    },
    get SUCCESSFUL_ADD_FORCED_DEPENDENCY_RELATION_MESSAGE () {
        return SUCCESSFUL_ADD_FORCED_DEPENDENCY_RELATION_MESSAGE;
    },
    get SUCCESSFUL_ADD_IGNORED_DEPENDENCY_MESSAGE () {
        return SUCCESSFUL_ADD_IGNORED_DEPENDENCY_MESSAGE;
    },
    get SUCCESSFUL_INITIALISE_MESSAGE () {
        return SUCCESSFUL_INITIALISE_MESSAGE;
    },
    get SUCCESSFUL_PROPAGATE_MESSAGE () {
        return SUCCESSFUL_PROPAGATE_MESSAGE;
    },
    get SUCCESSFUL_REMOVE_DIRECTORY_MESSAGE () {
        return SUCCESSFUL_REMOVE_DIRECTORY_MESSAGE;
    },
    get SUCCESSFUL_REMOVE_FORCED_DEPENDENCY_RELATION_MESSAGE () {
        return SUCCESSFUL_REMOVE_FORCED_DEPENDENCY_RELATION_MESSAGE;
    },
    get SUCCESSFUL_REMOVE_IGNORED_DEPENDENCY_MESSAGE () {
        return SUCCESSFUL_REMOVE_IGNORED_DEPENDENCY_MESSAGE;
    },
    get SUCCESSFUL_SET_SHELL_COMMANDS_MESSAGE () {
        return SUCCESSFUL_SET_SHELL_COMMANDS_MESSAGE;
    }
});
var NO_RELEASE_MESSAGE = "Either the sub-directory is missing or it does not contain a package.json file.";
var NO_ARGUMENT_GIVEN_MESSAGE = "No argument has been given.";
var NO_IGNORED_DEPENDENCIES_MESSAGE = "There are no ignored dependencies.";
var NO_FORCED_DEPENDENCY_RELATIONS_MESSAGE = "There are no forced dependency relations.";
var INVALID_ANSWER_MESSAGE = "You must answer (y)es or (n)o.";
var INVALID_DIRECTORY_PATH_MESSAGE = "The directory path should be a relative path, starting with a period or more likely a double period.";
var INVALID_DIRECTORY_NUMBER_MESSAGE = "The directory number should match one of the numbers given above.";
var INVALID_FORCED_DEPENDENT_NAME_MESSAGE = "The dependent name must be non-empty.";
var INVALID_FORCED_DEPENDENCY_NAME_MESSAGE = "The dependency name must be non-empty.";
var INVALID_IGNORED_DEPENDENCY_NAME_MESSAGE = "The dependency name must be non-empty.";
var INVALID_IGNORED_DEPENDENCY_NUMBER_MESSAGE = "The ignored dependency number should match one of the numbers given above.";
var INVALID_FORCED_DEPENDENCY_RELATION_NUMBER_MESSAGE = "The forced dependency relation number should match one of the numbers given above.";
var FAILED_GIT_MESSAGE = "The Git script failed.";
var FAILED_SAVE_MESSAGE = "The 'package.json' file could not be saved.";
var FAILED_BUILD_MESSAGE = "The build script failed.";
var FAILED_INSTALL_MESSAGE = "The install script failed.";
var FAILED_PUBLISH_MESSAGE = "The publish script failed.";
var FAILED_PROPAGATE_MESSAGE = "Failed to propagate the package.";
var FAILED_INITIALISE_MESSAGE = "Failed to create a configuration file because one is already present.";
var FAILED_ADD_DIRECTORY_MESSAGE = "Failed to add a directory.";
var FAILED_REMOVE_DIRECTORY_MESSAGE = "Failed to remove a directory.";
var FAILED_SET_SHELL_COMMANDS_MESSAGE = "Failed to set the shell commands.";
var FAILED_ADD_IGNORED_DEPENDENCY_MESSAGE = "Failed to add an ignored dependency.";
var FAILED_REMOVE_IGNORED_DEPENDENCY_MESSAGE = "Failed to remove an ignored dependency.";
var FAILED_ADD_FORCED_DEPENDENCY_RELATION_MESSAGE = "Failed to add a forced dependency relation.";
var FAILED_REMOVE_FORCED_DEPENDENCY_RELATION_MESSAGE = "Failed to remove a forced dependency relation.";
var SUCCESSFUL_PROPAGATE_MESSAGE = "Propagated the package successfully.";
var SUCCESSFUL_INITIALISE_MESSAGE = "The configuration file has been created successfully.";
var SUCCESSFUL_ADD_DIRECTORY_MESSAGE = "The directory has been added successfully.";
var SUCCESSFUL_REMOVE_DIRECTORY_MESSAGE = "The directory has been removed successfully.";
var SUCCESSFUL_SET_SHELL_COMMANDS_MESSAGE = "The shell commands have been set successfully.";
var SUCCESSFUL_ADD_IGNORED_DEPENDENCY_MESSAGE = "The ignored dependency was added successfully.";
var SUCCESSFUL_REMOVE_IGNORED_DEPENDENCY_MESSAGE = "The ignored dependency was added successfully.";
var SUCCESSFUL_ADD_FORCED_DEPENDENCY_RELATION_MESSAGE = "The forced dependency relation was added successfully.";
var SUCCESSFUL_REMOVE_FORCED_DEPENDENCY_RELATION_MESSAGE = "The forced dependency relation was added successfully.";
var COMMAND_NOT_RECOGNISED_MESSAGE = "The command is not recognised.";
var RELEASE_NOT_PUBLISHABLE_MESSAGE = "The package.json file must contain both name and version fields in order to be publishable.";
var DIRECTORIES_INCLUDES_DIRECTORY_MESSAGE = "The directory has already been added.";
var CONFIGURATION_FILE_DOES_NOT_EXIST_MESSAGE = "The action cannot be performed because the configuration file is missing. Run 'propagate initialise' to create one.";
var AT_LEAST_ONE_CYCLIC_DEPENDENCY_MESSAGE = "There is at least one cyclic dependency.";
var AT_LEAST_ONE_CYCLIC_DEV_DEPENDENCY_MESSAGE = "There is at least one cyclic developer dependency.";
var IGNORED_DEPENDENCIES_INCLUDE_SUB_DIRECTORY_MESSAGE = "You cannot propagate an ignored dependency.";
var IGNORED_DEPENDENCIES_INCLUDE_IGNORED_DEPENDENCY_MESSAGE = "The ignored dependency has already been added.";
var FORCED_DEPENDENCY_RELATIONS_INCLUDE_FORCED_DEPENDENCY_RELATION_MESSAGE = "The forced dependency relation has already been added.";

//# sourceMappingURL=data:application/json;base64,