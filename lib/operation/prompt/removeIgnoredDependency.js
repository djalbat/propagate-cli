"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return removeIgnoredDependencyPromptOperation;
    }
});
var _necessary = require("necessary");
var _validate = require("../../utilities/validate");
var _messages = require("../../messages");
var _descriptions = require("../../descriptions");
var prompt = _necessary.shellUtilities.prompt;
function removeIgnoredDependencyPromptOperation(proceed, abort, context) {
    var attempts = Infinity, description = _descriptions.SPECIFY_IGNORED_DEPENDENCY_TO_REMOVE_DESCRIPTION, errorMessage = _messages.INVALID_IGNORED_DEPENDENCY_NUMBER_MESSAGE, ignoredDependencyNumbers = context.ignoredDependencyNumbers, validationFunction = function(ignoredDependencyNumber) {
        ignoredDependencyNumber = Number(ignoredDependencyNumber); ///
        return (0, _validate.validateIgnoredDependencyNumber)(ignoredDependencyNumber, ignoredDependencyNumbers);
    }, options = {
        attempts: attempts,
        description: description,
        errorMessage: errorMessage,
        validationFunction: validationFunction
    };
    prompt(options, function(answer) {
        var ignoredDependencyNumber = answer !== null ? Number(answer) : null, valid = ignoredDependencyNumber !== null;
        if (valid) {
            Object.assign(context, {
                ignoredDependencyNumber: ignoredDependencyNumber
            });
            proceed();
            return;
        }
        abort();
    });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9vcGVyYXRpb24vcHJvbXB0L3JlbW92ZUlnbm9yZWREZXBlbmRlbmN5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgeyBzaGVsbFV0aWxpdGllcyB9IGZyb20gXCJuZWNlc3NhcnlcIjtcblxuaW1wb3J0IHsgdmFsaWRhdGVJZ25vcmVkRGVwZW5kZW5jeU51bWJlciB9IGZyb20gXCIuLi8uLi91dGlsaXRpZXMvdmFsaWRhdGVcIjtcbmltcG9ydCB7IElOVkFMSURfSUdOT1JFRF9ERVBFTkRFTkNZX05VTUJFUl9NRVNTQUdFIH0gZnJvbSBcIi4uLy4uL21lc3NhZ2VzXCI7XG5pbXBvcnQgeyBTUEVDSUZZX0lHTk9SRURfREVQRU5ERU5DWV9UT19SRU1PVkVfREVTQ1JJUFRJT04gfSBmcm9tIFwiLi4vLi4vZGVzY3JpcHRpb25zXCI7XG5cbmNvbnN0IHsgcHJvbXB0IH0gPSBzaGVsbFV0aWxpdGllcztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcmVtb3ZlSWdub3JlZERlcGVuZGVuY3lQcm9tcHRPcGVyYXRpb24ocHJvY2VlZCwgYWJvcnQsIGNvbnRleHQpIHtcbiAgY29uc3QgYXR0ZW1wdHMgPSBJbmZpbml0eSxcbiAgICAgICAgZGVzY3JpcHRpb24gPSBTUEVDSUZZX0lHTk9SRURfREVQRU5ERU5DWV9UT19SRU1PVkVfREVTQ1JJUFRJT04sXG4gICAgICAgIGVycm9yTWVzc2FnZSA9IElOVkFMSURfSUdOT1JFRF9ERVBFTkRFTkNZX05VTUJFUl9NRVNTQUdFLFxuICAgICAgICB7IGlnbm9yZWREZXBlbmRlbmN5TnVtYmVycyB9ID0gY29udGV4dCxcbiAgICAgICAgdmFsaWRhdGlvbkZ1bmN0aW9uID0gKGlnbm9yZWREZXBlbmRlbmN5TnVtYmVyKSA9PiB7XG4gICAgICAgICAgaWdub3JlZERlcGVuZGVuY3lOdW1iZXIgPSBOdW1iZXIoaWdub3JlZERlcGVuZGVuY3lOdW1iZXIpOyAgLy8vXG5cbiAgICAgICAgICByZXR1cm4gdmFsaWRhdGVJZ25vcmVkRGVwZW5kZW5jeU51bWJlcihpZ25vcmVkRGVwZW5kZW5jeU51bWJlciwgaWdub3JlZERlcGVuZGVuY3lOdW1iZXJzKTtcbiAgICAgICAgfSwgIC8vL1xuICAgICAgICBvcHRpb25zID0ge1xuICAgICAgICAgIGF0dGVtcHRzLFxuICAgICAgICAgIGRlc2NyaXB0aW9uLFxuICAgICAgICAgIGVycm9yTWVzc2FnZSxcbiAgICAgICAgICB2YWxpZGF0aW9uRnVuY3Rpb25cbiAgICAgICAgfTtcblxuICBwcm9tcHQob3B0aW9ucywgKGFuc3dlcikgPT4ge1xuICAgIGNvbnN0IGlnbm9yZWREZXBlbmRlbmN5TnVtYmVyID0gKGFuc3dlciAhPT0gbnVsbCkgP1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBOdW1iZXIoYW5zd2VyKSA6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbnVsbCxcbiAgICAgICAgICB2YWxpZCA9IChpZ25vcmVkRGVwZW5kZW5jeU51bWJlciAhPT0gbnVsbCk7XG5cbiAgICBpZiAodmFsaWQpIHtcbiAgICAgIE9iamVjdC5hc3NpZ24oY29udGV4dCwge1xuICAgICAgICBpZ25vcmVkRGVwZW5kZW5jeU51bWJlclxuICAgICAgfSk7XG5cbiAgICAgIHByb2NlZWQoKTtcblxuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGFib3J0KCk7XG4gIH0pO1xufVxuIl0sIm5hbWVzIjpbInJlbW92ZUlnbm9yZWREZXBlbmRlbmN5UHJvbXB0T3BlcmF0aW9uIiwicHJvbXB0Iiwic2hlbGxVdGlsaXRpZXMiLCJwcm9jZWVkIiwiYWJvcnQiLCJjb250ZXh0IiwiYXR0ZW1wdHMiLCJJbmZpbml0eSIsImRlc2NyaXB0aW9uIiwiU1BFQ0lGWV9JR05PUkVEX0RFUEVOREVOQ1lfVE9fUkVNT1ZFX0RFU0NSSVBUSU9OIiwiZXJyb3JNZXNzYWdlIiwiSU5WQUxJRF9JR05PUkVEX0RFUEVOREVOQ1lfTlVNQkVSX01FU1NBR0UiLCJpZ25vcmVkRGVwZW5kZW5jeU51bWJlcnMiLCJ2YWxpZGF0aW9uRnVuY3Rpb24iLCJpZ25vcmVkRGVwZW5kZW5jeU51bWJlciIsIk51bWJlciIsInZhbGlkYXRlSWdub3JlZERlcGVuZGVuY3lOdW1iZXIiLCJvcHRpb25zIiwiYW5zd2VyIiwidmFsaWQiLCJPYmplY3QiLCJhc3NpZ24iXSwibWFwcGluZ3MiOiJBQUFBOzs7OytCQVVBOzs7ZUFBd0JBOzs7eUJBUk87d0JBRWlCO3dCQUNVOzRCQUNPO0FBRWpFLElBQU0sQUFBRUMsU0FBV0MseUJBQWMsQ0FBekJEO0FBRU8sU0FBU0QsdUNBQXVDRyxPQUFPLEVBQUVDLEtBQUssRUFBRUMsT0FBTztJQUNwRixJQUFNQyxXQUFXQyxVQUNYQyxjQUFjQyw4REFBZ0QsRUFDOURDLGVBQWVDLG1EQUF5QyxFQUN4RCxBQUFFQywyQkFBNkJQLFFBQTdCTywwQkFDRkMscUJBQXFCLFNBQUNDO1FBQ3BCQSwwQkFBMEJDLE9BQU9ELDBCQUEyQixHQUFHO1FBRS9ELE9BQU9FLElBQUFBLHlDQUErQixFQUFDRix5QkFBeUJGO0lBQ2xFLEdBQ0FLLFVBQVU7UUFDUlgsVUFBQUE7UUFDQUUsYUFBQUE7UUFDQUUsY0FBQUE7UUFDQUcsb0JBQUFBO0lBQ0Y7SUFFTlosT0FBT2dCLFNBQVMsU0FBQ0M7UUFDZixJQUFNSiwwQkFBMEIsQUFBQ0ksV0FBVyxPQUNWSCxPQUFPRyxVQUNMLE1BQzlCQyxRQUFTTCw0QkFBNEI7UUFFM0MsSUFBSUssT0FBTztZQUNUQyxPQUFPQyxNQUFNLENBQUNoQixTQUFTO2dCQUNyQlMseUJBQUFBO1lBQ0Y7WUFFQVg7WUFFQTtRQUNGO1FBRUFDO0lBQ0Y7QUFDRiJ9